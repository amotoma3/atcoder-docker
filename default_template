#include <bits/stdc++.h>

#include <atcoder/all>
using namespace std;
using namespace atcoder;
using ll = long long;
using vl = vector<ll>;
using vvl = vector<vl>;
using vvvl = vector<vvl>;
using pl = pair<ll, ll>;
using vp = vector<pl>;
using vvp = vector<vp>;
using vvvp = vector<vvp>;
{% if mod %}
using mint = modint{{ mod }};
{% else %}
using mint = modint998244353;
{% endif %}
using vm = vector<mint>;
using vvm = vector<vm>;
using vvvm = vector<vvm>;
const ll INF = 1001001001;
const ll LINF = 1001001001001001001;
const ll D4[] = {0, 1, 0, -1, 0};
const ll D8[] = {0, 1, 1, 0, -1, -1, 1, -1, 0};
#define _ol3(_1, _2, _3, name, ...) name
#define _rep2(i, n) for (ll i = 0; i < (ll)(n); ++i)
#define _rep3(i, a, b) for (ll i = (ll)(a); i < (ll)(b); ++i)
#define rep(...) _ol3(__VA_ARGS__, _rep3, _rep2)(__VA_ARGS__)
#define all(x) (x).begin(), (x).end()
#ifdef LOCAL
#define dbg(x) cerr << __LINE__ << " : " << #x << " = " << (x) << endl
#else
#define dbg(x) true
#endif

template <class T>
bool chmax(T& a, const T& b) {
  if (a < b) {
    a = b;
    return 1;
  }
  return 0;
}

template <class T>
bool chmin(T& a, const T& b) {
  if (b < a) {
    a = b;
    return 1;
  }
  return 0;
}

{% if mod %}
const ll mod = {{ mod }};
{% endif %}
{% if yes_str %}
const string YES = "{{ yes_str }}";
{% endif %}
{% if no_str %}
const string NO = "{{ no_str }}";
{% endif %}

{% if prediction_success %}
{{ declaration_part }}
{% endif %}

void solve();

int main() {
  cin.tie(0);
  ios::sync_with_stdio(0);
{% if prediction_success %}
  {{ input_part }}
{% endif %}
  solve();
}

{% if prediction_success %}
// {{ formal_arguments }}
{% endif %}
void solve() {

}
